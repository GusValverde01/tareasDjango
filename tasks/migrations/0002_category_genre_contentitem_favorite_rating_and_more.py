# Generated by Django 5.2.3 on 2025-06-25 01:13

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Género',
                'verbose_name_plural': 'Géneros',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('content_type', models.CharField(choices=[('movie', 'Película'), ('series', 'Serie'), ('book', 'Libro'), ('anime', 'Anime'), ('videogame', 'Videojuego')], max_length=20, verbose_name='Tipo de contenido')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Fecha de lanzamiento')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Duración (minutos)')),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='Calificación')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='URL de imagen')),
                ('trailer_url', models.URLField(blank=True, null=True, verbose_name='URL de trailer')),
                ('director', models.CharField(blank=True, max_length=200, null=True, verbose_name='Director')),
                ('author', models.CharField(blank=True, max_length=200, null=True, verbose_name='Autor')),
                ('studio', models.CharField(blank=True, max_length=200, null=True, verbose_name='Estudio/Editorial')),
                ('platform', models.CharField(blank=True, max_length=200, null=True, verbose_name='Plataforma')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.category', verbose_name='Categoría')),
                ('genres', models.ManyToManyField(blank=True, to='tasks.genre', verbose_name='Géneros')),
            ],
            options={
                'verbose_name': 'Contenido',
                'verbose_name_plural': 'Contenidos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de adición')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.contentitem', verbose_name='Contenido')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Favorito',
                'verbose_name_plural': 'Favoritos',
                'ordering': ['-added_at'],
                'unique_together': {('user', 'content')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación')),
                ('review', models.TextField(blank=True, verbose_name='Reseña')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ratings', to='tasks.contentitem', verbose_name='Contenido')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Calificación',
                'verbose_name_plural': 'Calificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=500, verbose_name='Consulta')),
                ('content_type_filter', models.CharField(blank=True, max_length=20, verbose_name='Filtro de tipo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de búsqueda')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Historial de Búsqueda',
                'verbose_name_plural': 'Historiales de Búsqueda',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_content_types', models.CharField(blank=True, max_length=100, verbose_name='Tipos de contenido favoritos')),
                ('bio', models.TextField(blank=True, verbose_name='Biografía')),
                ('favorite_genres', models.ManyToManyField(blank=True, to='tasks.genre', verbose_name='Géneros favoritos')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
        migrations.DeleteModel(
            name='Task',
        ),
        migrations.AddIndex(
            model_name='contentitem',
            index=models.Index(fields=['content_type'], name='tasks_conte_content_f50d86_idx'),
        ),
        migrations.AddIndex(
            model_name='contentitem',
            index=models.Index(fields=['title'], name='tasks_conte_title_96063c_idx'),
        ),
        migrations.AddIndex(
            model_name='contentitem',
            index=models.Index(fields=['rating'], name='tasks_conte_rating_f618fc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('user', 'content')},
        ),
    ]
